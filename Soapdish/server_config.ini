; When joining a Soaprun server, the game connects to the following:
; 1. The Dispatch Server
;    Broadcasts whether the server is open, what ip/port it's running on, and a message that will be displayed to any players who try to join when the server's closed.
; 2. The Game Server
;    This is what actually runs the game, and it's what the "soapdispenser" project replaces
; By changing this variable, you can change how Soaprun accomplishes these steps.
; Valid options are curl (recommended), original, or direct
connection_method = curl


; You shouldn't need to change the user agent, but if someone decides to use it as a security measure, you can change it here
; user_agent = Soaprun1


; Uses curl instead of Pixel's janky hand-crafted HTTP code
; Put the whole url, including the port number if necessary
[curl]
; This is the original url of Pixel's Soaprun Dispatch server
; curl_url = hpcgi2.nifty.com:80/rochet/en_x0_kb/server.cgi

; HOW TO JOIN A SERVER
; 1. Go to soaprun.cavestory.org to find a server to join
; 2. Copy-paste the url into the provided space below
; 3. Remove the semi-colon at the start of the line
; 4. ???
; 5. Profit
; curl_url = http://soaprun.cavestory.org/XXXX/XX/XX/...


; Soaprun originally hand-crafted an HTTP 1.1 packet to send to the dispatch
; The code to do this is very bad and does not respect the HTTP standard, but you can use it on very basic web servers if you want
[original]
; These are the values hardcoded into the exe (long dead)
; dispatch_hostname = hpcgi2.nifty.com
; dispatch_path = /rochet/en_x0_kb/
; dispatch_name = server.cgi
dispatch_port = 80


; This method skips over the dispatch server entirely and directly connects to the game server at the given ip/port
; Only recommended for developers, since this skips over any error messages the dispatch server may provide
[direct]
; This is the ip/port of Pixel's original Soaprun server (long dead)
; direct_ip = 218.226.167.227
; direct_port = 1002